name: Build Android App via API

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'The branch, tag or SHA to checkout.'
        required: true
        default: 'master'
      project_id:
        description: 'The Bendstack Project ID for the server URL'
        required: true
      app_name:
        description: 'The desired name for the mobile app'
        required: true
      logo_url:
        description: 'Public URL to the app logo image (PNG)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Create and Switch to Project Branch
        id: brancher
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          BRANCH_NAME="${{ inputs.project_id }}-${SHORT_SHA}"
          git checkout -b "${BRANCH_NAME}"
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "ðŸŒ¿ Switched to new unique branch: ${BRANCH_NAME}"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install
      
      - name: Update Capacitor Config
        run: |
          jq '.server.url = "https://"${{ inputs.project_id }}".bendstack.app" | .appName = "${{ inputs.app_name }}"' capacitor.config.json > temp.json && mv temp.json capacitor.config.json
          echo "âœ… Config updated for app: ${{ inputs.app_name }}"
      
      - name: Update Native Android App Name
        run: |
          strings_file="android/app/src/main/res/values/strings.xml"
          sed -i 's|\(<string name="app_name">\).*\(</string>\)|\1${{ inputs.app_name }}\2|' "$strings_file"
          sed -i 's|\(<string name="title_activity_main">\).*\(</string>\)|\1${{ inputs.app_name }}\2|' "$strings_file"
          echo "âœ… Directly updated app name in strings.xml"

      # === MOVED STEPS START HERE ===
      - name: Install ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick

      - name: Generate and Update App Icons
        run: |
          npm install @capacitor/assets --save-dev
          mkdir -p assets
          curl -L -o assets/icon-only.png "${{ inputs.logo_url }}"
          echo "âœ… Logo downloaded to assets/icon-only.png."
          convert assets/icon-only.png -background white -flatten assets/icon-only.png
          echo "âœ¨ Processed icon to have a white background."
          cp assets/icon-only.png assets/icon-foreground.png
          echo "âœ… Copied icon-only.png to icon-foreground.png."
          cp assets/icon-only.png assets/icon-background.png
          echo "âœ… Copied icon-only.png to icon-background.png."
          convert -size 2732x2732 canvas:white assets/icon-only.png -gravity center -composite assets/splash.png
          echo "ðŸŽ¨ Created 2732x2732 splash screen at assets/splash.png."
          cp assets/splash.png assets/splash-dark.png
          echo "âœ… Copied splash.png to splash-dark.png."
          npx capacitor-assets generate --android
          echo "âœ… Generated all Android icons using capacitor-assets."

      - name: Sync Capacitor Project
        run: npx cap sync android

      # === MOVED STEPS END HERE ===

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions-bot@github.com'
          # MODIFIED: Add all generated resources to the commit
          git add capacitor.config.json android/app/src/main/res/
          git diff-index --quiet HEAD || git commit -m "feat(ci): Configure app for ${{ inputs.project_id }}"
          git push -u origin ${{ steps.brancher.outputs.branch_name }}
          echo "âœ… Pushed changes to branch: ${{ steps.brancher.outputs.branch_name }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Make gradlew executable
        run: chmod +x ./android/gradlew

      - name: Decode Keystore
        run: echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > android/app/my-release-key.keystore

      - name: Build Signed Android Release
        run: |
          ./android/gradlew -p ./android clean assembleRelease \
            -Pandroid.injected.signing.store.file=$(pwd)/android/app/my-release-key.keystore \
            -Pandroid.injected.signing.store.password='${{ secrets.RELEASE_KEYSTORE_PASSWORD }}' \
            -Pandroid.injected.signing.key.alias='${{ secrets.RELEASE_KEY_ALIAS }}' \
            -Pandroid.injected.signing.key.password='${{ secrets.RELEASE_KEY_PASSWORD }}'

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}

      - name: Upload APK to Firebase Storage
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: android/app/build/outputs/apk/release/app-release.apk
          destination: ${{ secrets.FIREBASE_STORAGE_BUCKET }}/latest/${{ steps.brancher.outputs.branch_name }}.apk
          
      - name: Construct Firebase Storage Public URL
        id: storage_url
        run: |
          BUCKET="${{ secrets.FIREBASE_STORAGE_BUCKET }}"
          OBJECT_PATH="latest/${{ steps.brancher.outputs.branch_name }}.apk"
          # URL encode the object path to handle special characters
          ENCODED_OBJECT_PATH=$(echo -n "$OBJECT_PATH" | jq -sRr @uri)
          URL="https://firebasestorage.googleapis.com/v0/b/${BUCKET}/o/${ENCODED_OBJECT_PATH}?alt=media"
          echo "url=${URL}" >> $GITHUB_OUTPUT
          echo "âœ… Constructed Public URL: ${URL}"

      - name: Update Firestore with Download URL
        run: |
          echo "ðŸ”¥ Updating Firestore document 'projects/${{ inputs.project_id }}'..."
          gcloud firestore documents update "projects/${{ inputs.project_id }}" \
            --update-field-paths="android_download_url" \
            --update-field-values="string_value=${{ steps.storage_url.outputs.url }}"
          echo "âœ… Firestore updated successfully."